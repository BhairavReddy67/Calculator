{"version":3,"sources":["context/ReduxProvider.js","actions/Action.js","components/CounterButton.js","actions/ActionType.js","components/CountNumber.js","App.js","reportWebVitals.js","actions/Reducer.js","actions/Store.js","index.js"],"names":["ReduxContext","React","createContext","ReduxProvider","children","store","value","dispatch","getState","useState","state","setState","subscribe","Provider","INC_COUNTER","DEC_COUNTER","MUL_COUNTER","DIV_COUNTER","CounterButton","useContext","num","setNum","type","placeholder","onChange","e","target","onClick","payload","add_number","Number","sub_number","mul_number","div_number","CountNumber","count","status","console","log","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initial","Counter","action","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.643a6f0f.chunk.js","sourcesContent":["import React from 'react'\r\nexport const ReduxContext=React.createContext()\r\nfunction ReduxProvider({children,store}) {\r\n    const {dispatch,getState}= store;\r\n    const value={dispatch,getState}\r\n    const [state,setState]=React.useState(0)\r\n    const forceupdate=()=>setState(state+1)\r\n    store.subscribe(forceupdate)\r\n    return (\r\n        <ReduxContext.Provider value={value}>\r\n            {children}\r\n        </ReduxContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ReduxProvider\r\n","export const INC_COUNTER = \"INC_COUNTER\"\r\nexport const DEC_COUNTER = \"DEC_COUNTER\"\r\nexport const MUL_COUNTER = \"MUL_COUNTER\"\r\nexport const DIV_COUNTER = \"DIV_COUNTER\"\r\n","import React from 'react'\r\nimport { decrementCounter, diviCounter, incrementCounter, multiCounter } from '../actions/ActionType'\r\nimport { ReduxContext } from '../context/ReduxProvider'\r\n\r\nfunction CounterButton() {\r\n    const {dispatch}= React.useContext(ReduxContext)\r\n    const [num,setNum]=React.useState()\r\n    const handleChangeAdd=()=>{\r\n        const add_number=incrementCounter(Number(num))\r\n        dispatch(add_number)\r\n    }\r\n    const handleChangesub=()=>{\r\n        const sub_number=decrementCounter(Number(num))\r\n        dispatch(sub_number)\r\n    }\r\n    const handleChangemul=()=>{\r\n        const mul_number=multiCounter(Number(num))\r\n        dispatch(mul_number)\r\n    }\r\n    const handleChangediv=()=>{\r\n        const div_number=diviCounter(Number(num))\r\n        dispatch(div_number)\r\n    }\r\n    const handleChange=(e)=>{\r\n        const {value}=e.target\r\n        setNum(value)\r\n    }\r\n    return (\r\n        <div>\r\n            <input type=\"number\" value={num} placeholder=\"enter number\" onChange={handleChange}/>\r\n            <button onClick={handleChangeAdd}>ADD</button>\r\n            <button onClick={handleChangesub}>sub</button>\r\n            <button onClick={handleChangemul}>mul</button>\r\n            <button onClick={handleChangediv}>div</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CounterButton\r\n","import { DEC_COUNTER, DIV_COUNTER, INC_COUNTER, MUL_COUNTER } from \"./Action\"\r\n\r\nexport const incrementCounter = (payload) =>{\r\n    return {\r\n        type: INC_COUNTER,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const decrementCounter =(payload) => {\r\n    return {\r\n        type : DEC_COUNTER,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const multiCounter =(payload) => {\r\n    return {\r\n        type : MUL_COUNTER,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const diviCounter =(payload) => {\r\n    return {\r\n        type : DIV_COUNTER,\r\n        payload\r\n    }\r\n}","import React from 'react'\r\nimport { ReduxContext } from '../context/ReduxProvider'\r\nimport CounterButton from './CounterButton';\r\n\r\nfunction CountNumber() {\r\n    const {getState}=React.useContext(ReduxContext)\r\n    const {count,status}=getState();\r\n    console.log(count)\r\n    return (\r\n        <div>\r\n            <h1>count</h1>\r\n            <h2>{count}</h2>\r\n            {status?<p>notPosible</p>:!status}\r\n            <CounterButton/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountNumber\r\n","import './App.css';\nimport CountNumber from './components/CountNumber';\n// import Counter from \"./actions/Reducer.js\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CountNumber/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { DEC_COUNTER, DIV_COUNTER, INC_COUNTER, MUL_COUNTER } from \"./Action\"\r\n\r\nconst initial = {\r\n    count:0,\r\n    status:false,\r\n}\r\n\r\nconst Counter = (state = initial , action  )=>{\r\n    switch (action.type){\r\n        case INC_COUNTER:\r\n            return {\r\n                ...state,\r\n                count:state.count+action.payload\r\n            }\r\n        case DEC_COUNTER:\r\n            return {\r\n                ...state,\r\n                count:state.count-action.payload\r\n            }\r\n        case MUL_COUNTER:\r\n            return {\r\n                ...state,\r\n                count:state.count*action.payload\r\n            }\r\n        case DIV_COUNTER:\r\n            if(state.count>=action.payload){\r\n                return {\r\n                    ...state,\r\n                    count:state.count/action.payload,\r\n                    status:false\r\n                }\r\n            }\r\n            return state,{\r\n                ...state,\r\n                status:!state.status\r\n            }\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Counter","import {createStore} from \"redux\"\r\nimport Counter from \"./Reducer.js\"\r\n\r\nexport const store =createStore(Counter)\r\n\r\n console.log(store.getState())","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./actions/Store.js\"\nimport ReduxProvider from './context/ReduxProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={store}>\n      <App />\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}